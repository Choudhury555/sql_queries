-------------------------------------------------
-------------------IN SQL PLUS-------------------
-------------------------------------------------
-- '/' AS SYSDBA;
-- alter session set "_ORACLE_SCRIPT"=true;
-- CREATE USER abhisek IDENTIFIED BY Abhisek#20;
-- grant all privileges to abhisek;
-------------------------------------------------
---------------------END-------------------------
-------------------------------------------------



----------------------------------------------
-----------START NORMAL SQL QUERIES-----------
----------------------------------------------


--05/08/2024
--create table Emp(empid number,ename varchar(50)); 
--select * from emp;
--insert into emp (empid,ename)values (01,'sanjeeb');
--insert into emp (empid,ename)values(2,'abhi');
--delete from emp where empid=1;
--alter table emp add constraint emp_pk primary key(empid);
--update emp set ename='abhisek' where empid=2;


CREATE TABLE STUDENT(
STID NUMBER PRIMARY KEY,
STFNAME VARCHAR(50),
STLNAME VARCHAR(50),
STCITY VARCHAR(50)
);
SELECT * FROM STUDENT;
INSERT INTO STUDENT (STID,STFNAME,STLNAME,STCITY)VALUES(1,'ABHISEK','PANDA','JAJPUR');
INSERT INTO STUDENT (STID,STFNAME,STLNAME,STCITY)VALUES(2,'SANJEEB','DASH','PURI');
INSERT INTO STUDENT (STID,STFNAME,STLNAME,STCITY)VALUES(3,'BIBEK','CHOUDHURY','BALASOR');
INSERT INTO STUDENT (STID,STFNAME,STLNAME,STCITY)VALUES(4,'AKASH','GIRI','BALASOR');
INSERT INTO STUDENT (STID,STFNAME,STLNAME,STCITY)VALUES(5,'CHIRANJEEB','DASH','PURI');
COMMIT;

CREATE TABLE SUBJECT(
SUBID NUMBER,
STID NUMBER,
CONSTRAINT F_KEY FOREIGN KEY(STID) REFERENCES STUDENT(STID)
);

INSERT INTO SUBJECT (SUBID,STID)VALUES(10,1);
INSERT INTO SUBJECT (SUBID,STID)VALUES(10,2);
INSERT INTO SUBJECT (SUBID,STID)VALUES(10,3); 
INSERT INTO SUBJECT (SUBID,STID)VALUES(10,4);
INSERT INTO SUBJECT (SUBID,STID)VALUES(10,5);

INSERT INTO SUBJECT (SUBID,STID)VALUES(20,1);
INSERT INTO SUBJECT (SUBID,STID)VALUES(20,2);
INSERT INTO SUBJECT (SUBID,STID)VALUES(20,4);

INSERT INTO SUBJECT (SUBID,STID)VALUES(30,1);
INSERT INTO SUBJECT (SUBID,STID)VALUES(30,4);
INSERT INTO SUBJECT (SUBID,STID)VALUES(30,5);

INSERT INTO SUBJECT (SUBID,STID)VALUES(40,1);
INSERT INTO SUBJECT (SUBID,STID)VALUES(40,3);
INSERT INTO SUBJECT (SUBID,STID)VALUES(40,5);

INSERT INTO SUBJECT(SUBID,STID)VALUES(50,1);
DELETE FROM SUBJECT WHERE SUBID=50;

SELECT * FROM SUBJECT;


CREATE TABLE SUBNAME(
SUBID NUMBER PRIMARY KEY,
SUBNAME VARCHAR(50)
);

INSERT INTO SUBNAME(SUBID,SUBNAME)VALUES(10,'ODIA');
INSERT INTO SUBNAME(SUBID,SUBNAME)VALUES(20,'MATH');
INSERT INTO SUBNAME(SUBID,SUBNAME)VALUES(30,'PHYSICS');
INSERT INTO SUBNAME(SUBID,SUBNAME)VALUES(40,'CHEMISTRY');

ALTER TABLE SUBJECT ADD CONSTRAINT S_SUBID_KEY FOREIGN KEY (SUBID) REFERENCES SUBNAME(SUBID);

SELECT * FROM SUBNAME;

COMMIT;

--06/08/2024
SELECT * FROM SUBJECT;

SELECT SUBID FROM SUBJECT;
SELECT DISTINCT (SUBID) FROM SUBJECT;--DISTINCT OR UNIQUE

SELECT * FROM STUDENT WHERE STID=5;

SELECT * FROM STUDENT ORDER BY STCITY DESC;
SELECT STID,STCITY FROM STUDENT ORDER BY STID DESC;

SELECT * FROM STUDENT WHERE STID>=2 AND STID<=4;
SELECT * FROM STUDENT WHERE STID < 3 OR STID > 4;

SELECT * FROM STUDENT WHERE STID!=3;
SELECT * FROM STUDENT WHERE NOT STID=3;

INSERT INTO STUDENT(STID,STFNAME,STLNAME) VALUES(6,'ALIVA','PATTNAIK');

SELECT * FROM STUDENT WHERE STCITY IS NULL;
SELECT * FROM STUDENT WHERE STCITY IS NOT NULL;

INSERT INTO STUDENT(STID,STFNAME,STLNAME) VALUES(7,'X','X');
SELECT * FROM STUDENT;

UPDATE STUDENT SET STFNAME='WOW' WHERE STID=7;
DELETE FROM STUDENT WHERE STID=7;

SELECT * FROM STUDENT WHERE ROWNUM < 3 ORDER BY STID ASC;

SELECT * FROM STUDENT FETCH FIRST 3 ROWS ONLY;
SELECT * FROM STUDENT ORDER BY STID ASC FETCH FIRST 3 ROWS ONLY ;

COMMIT;

--07/08/2024
SELECT * FROM SUBJECT;
SELECT SUBID,COUNT (*) FROM SUBJECT GROUP BY SUBID;
SELECT COUNT (*) SUBID FROM SUBJECT;

SELECT MIN (SUBID) FROM SUBJECT; 
SELECT MAX (SUBID) FROM SUBJECT;
SELECT SUM(SUBID) FROM SUBJECT;
SELECT AVG (SUBID) FROM SUBJECT;

SELECT SUBID,COUNT (SUBID) FROM SUBJECT GROUP BY SUBID;
SELECT STID,COUNT (SUBID) FROM SUBJECT GROUP BY STID;

SELECT SUBID,COUNT (*) AS NUMBER_OF_STUDENT_ENROLLED FROM SUBJECT GROUP BY SUBID;
SELECT STID,COUNT (SUBID) AS NUMBER_OF_SUBJECT_ENROLLED FROM SUBJECT GROUP BY STID;

SELECT STID,SUM (STID) FROM SUBJECT GROUP BY STID;
COMMIT;

--08/08/2024
SELECT * FROM STUDENT WHERE STCITY LIKE 'B%'; --'B%' MEANS STARTS WITH THIS LETTER OR '%B' MENAS ENDS WITH LETTERS
SELECT * FROM STUDENT WHERE STCITY LIKE '%J_U%';
SELECT * FROM STUDENT WHERE STLNAME LIKE '__R%'; 

SELECT * FROM STUDENT;
UPDATE STUDENT SET STLNAME='PARIDA' WHERE STID=6;

SELECT * FROM STUDENT WHERE STLNAME LIKE '%R__A%';
SELECT * FROM STUDENT WHERE STLNAME LIKE '%P_N%';
SELECT * FROM STUDENT WHERE STFNAME LIKE '_B_I%K';

SELECT * FROM STUDENT WHERE STFNAME LIKE 'B%K%';
SELECT * FROM STUDENT WHERE STLNAME LIKE '_A%H';

SELECT * FROM SUBNAME WHERE SUBNAME IN ('SANSKRIT','HINDI','ODIA','PHYSICS');
SELECT * FROM SUBNAME WHERE SUBNAME NOT IN ('SANSKRIT','HINDI','ODIA','PHYSICS');

SELECT * FROM STUDENT WHERE STID BETWEEN 2 AND 4;

SELECT  STID,COUNT (*) FROM SUBJECT GROUP BY STID HAVING COUNT (*) >= 3; -- ANYWHERE SEE GROUP BY THERE PUT HAVING ,BUT NOT WHERE
SELECT  STID FROM SUBJECT GROUP BY STID HAVING COUNT (*) >= 3;
SELECT * FROM STUDENT WHERE STID IN(10,2,45,3);
SELECT * FROM STUDENT WHERE STID IN(SELECT  STID FROM SUBJECT GROUP BY STID HAVING COUNT (*) >= 3); --SUBQUERY OR NESTED QUERY

COMMIT;

--09/08/2024
--SUBQUERY OR NESTED QUERY
SELECT * FROM STUDENT;

SELECT MAX (STID) FROM STUDENT;
SELECT MAX (STID) FROM STUDENT WHERE NOT STID = (SELECT MAX (STID) FROM STUDENT);

SELECT MIN (STID) FROM STUDENT;
SELECT MIN (STID) FROM STUDENT WHERE STID!=(SELECT MIN (STID) FROM STUDENT);

DESC STUDENT;

--10/08/2024
--JOIN(INNER,LEFT ,RIGHT,FULL OUTER)
SELECT * FROM SUBNAME;
SELECT * FROM SUBJECT;
SELECT * FROM STUDENT CROSS JOIN SUBJECT;

SELECT * FROM STUDENT INNER JOIN SUBJECT ON STUDENT.STID = SUBJECT.STID ORDER BY SUBJECT.STID;

INSERT INTO STUDENT (STID,STFNAME,STLNAME,STCITY) VALUES (7,'SAM','SAHU','BBSR');

COMMIT;

SELECT * FROM STUDENT A LEFT OUTER JOIN SUBJECT B ON A.STID=B.STID;--STUDENT.STID = SUBJECT.STID;
SELECT * FROM STUDENT RIGHT OUTER JOIN SUBJECT ON STUDENT.STID = SUBJECT.STID;

SELECT * FROM SUBJECT RIGHT OUTER JOIN STUDENT ON STUDENT.STID = SUBJECT.STID;

--JOIN

CREATE TABLE TAB1(
ID NUMBER,
NAME VARCHAR(50)
);

CREATE TABLE TAB2(
ID NUMBER,
NAME VARCHAR(50)
);

INSERT INTO TAB1 (ID,NAME) VALUES(1,'SHINU');
INSERT INTO TAB1 (ID,NAME) VALUES(2,'ABHISEK');
INSERT INTO TAB1 (ID,NAME) VALUES(3,'BIBEK');
INSERT INTO TAB1 (ID,NAME) VALUES(4,'CHIRA');

SELECT * FROM TAB1;

INSERT INTO TAB2 (ID,NAME) VALUES(3,'RAM');
INSERT INTO TAB2 (ID,NAME) VALUES(4,'KRISHNA');
INSERT INTO TAB2 (ID,NAME) VALUES(5,'HARI');
INSERT INTO TAB2 (ID,NAME) VALUES(6,'SAM');

COMMIT;
SELECT * FROM TAB2;
--INNER JOIN
SELECT * FROM TAB1 INNER JOIN TAB2 ON TAB1.ID=TAB2.ID;

--LEFT OUTER JOIN
SELECT * FROM TAB1 LEFT OUTER JOIN TAB2 ON TAB1.ID=TAB2.ID;
SELECT * FROM TAB2 LEFT OUTER JOIN TAB1 ON TAB1.ID=TAB2.ID;

--RIGHT OUTER JOIN
SELECT * FROM TAB1 RIGHT OUTER JOIN TAB2 ON TAB1.ID=TAB2.ID;
SELECT * FROM TAB2 RIGHT OUTER JOIN TAB1 ON TAB1.ID=TAB2.ID;

--FULL OUTER JOIN
SELECT * FROM TAB1 FULL OUTER JOIN TAB2 ON TAB1.ID=TAB2.ID;
SELECT * FROM TAB2 FULL OUTER JOIN TAB1 ON TAB1.ID=TAB2.ID;

--CROSS JOIN
SELECT * FROM TAB1 CROSS JOIN TAB2;
SELECT * FROM TAB2 CROSS JOIN TAB1;

--EQUI JOIN
SELECT * FROM TAB1,TAB2 WHERE TAB1.ID=TAB2.ID;

--SELF JOIN
SELECT * FROM TAB1 SELF JOIN TAB1 ON TAB1.ID=TAB1.ID;

COMMIT;

--UNION
SELECT ID FROM TAB1 UNION ALL SELECT ID FROM TAB2 ;

COMMIT;

--13/08/2024
-- SAVEPOINT SAVEONE
CREATE TABLE TEMP(
ID NUMBER PRIMARY KEY,
NAME VARCHAR(50)
);

SAVEPOINT SAVEONE;
INSERT INTO TEMP(ID,NAME) VALUES(1,'ABHISEK');

SAVEPOINT SAVETWO;
INSERT INTO TEMP(ID,NAME) VALUES(2,'SHINU');

SAVEPOINT SAVETHREE;
INSERT INTO TEMP(ID,NAME) VALUES(3,'BIBEK');

SELECT * FROM TEMP;


SAVEPOINT SAVEFOUR;
UPDATE TEMP SET NAME='AMIT' WHERE ID=2;

SELECT * FROM TEMP;

SAVEPOINT SAVEFIVE;
DELETE FROM TEMP WHERE ID=2;


SELECT * FROM TEMP;

ROLLBACK TO SAVEFIVE;
SELECT * FROM TEMP;

ROLLBACK TO SAVEFOUR;
SELECT * FROM TEMP;

ROLLBACK TO SAVETHREE;
SELECT * FROM TEMP;

ROLLBACK TO SAVEONE;
SELECT * FROM TEMP;

COMMIT;
--14/08/2024
--  EXISTS
SELECT * FROM STUDENT WHERE EXISTS(SELECT * FROM SUBJECT);

--ANY OR ALL
SELECT * FROM STUDENT WHERE STID=ANY(SELECT STID FROM SUBJECT WHERE STID > 3); 
SELECT * FROM STUDENT WHERE STID=ALL(SELECT STID FROM STUDENT WHERE STID = 3);
SELECT STID FROM SUBJECT;

CREATE TABLE A(
NAME VARCHAR(50), 
ROLL NUMBER,
SECTION VARCHAR(50)
);

SELECT * FROM A;
-- DROP TABLE A;

INSERT INTO A(ROLL,NAME) SELECT STID,STFNAME FROM STUDENT;
SELECT * FROM A;

CREATE TABLE B AS SELECT * FROM SUBNAME;
SELECT * FROM B;

COMMIT;

--CASE--
SELECT STUDENT.*, 
CASE
    WHEN STID <= 2 THEN 'STID IS LESS THAN EQUAL 2'
    WHEN STID > 2 AND STID < 5 THEN 'STID IS GREATER THAN 2 AND LESS THAN 5'
    ELSE  'STID IS GREATER THAN 5' 
END AS SOMETEXT 
FROM STUDENT;

SELECT * FROM STUDENT;

SELECT NVL (STCITY,'RANDOM CITY') FROM STUDENT;
SELECT COALESCE (STCITY,STFNAME,STLNAME) FROM STUDENT;
--NVL2 (TERNARY)
SELECT NVL2 (STCITY,'VALUE IS NOT NULL','VALUE IS NULL') FROM STUDENT;


--AUTO INCREMENT , CHECK , DEFAULT
CREATE TABLE TAB3(
ID NUMBER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
AGE NUMBER CHECK(AGE >= 18),
CITY VARCHAR(50) DEFAULT 'CHAMPA'
);

--DROP TABLE TAB3;
INSERT INTO TAB3 (AGE) VALUES(19);
INSERT INTO TAB3 (AGE,CITY) VALUES(20,'PURI');

SELECT * FROM TAB3;

COMMIT;

SELECT TABLE_NAME FROM USER_TABLES;